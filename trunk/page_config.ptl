# -*- coding: utf-8 -*-
#
# Copyright (C) 2005 by Holger Schurig
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#


from Templates import *
import os, grp, backend, string
import panelutils
from quixote.directory import Directory, AccessControlled
from quixote import get_request, get_session

class Page(AccessControlled, Directory): 

	_q_parent  = 'page_main'
	_q_title   = _("Configuration")
	_q_desc    = _("Modify Asterisk configuration")
	_q_menupos = 30
	_q_level   = 3

	_q_exports = ['']

	tipped = False

	def _q_access(self):
		self.session = get_session()
		self.request = get_request()
		if self.session.level < self._q_level:
			cantAccessPage()

	def configurationTip [plain] (self, tip, url, label):
		tipped = self.tipped
		global tipped
		if not tipped:
			'<p>'
			htmltext(_('Configuration tips'))
			'</p>'
			'<ul>'
		self.tipped = True
		'<li>'
		htmltext(_(tip))
		if url:
			'You can do it in the <a href="%s">' % url
			' -> '.join(label)
			'</a> form.'	
		'</li>'


	def configurationTips [plain] (self):
		tipped = self.tipped
		global tipped
		tipped = False

		groups = []
		for gid in os.getgroups():
			groups.append(grp.getgrgid(gid)[0])
		groups = ", ".join(groups)

		if self.session.user=='programmer':
			self.configurationTip(
				_("You should create a user with type 'Configurator'. Without this user, everyone connecting to DeStar can configure everything."),
				"add/CfgOptUser",
				[_("Configuration"), _("Options"), _("DeStar user")] )

		if not os.access("/etc/asterisk", os.O_RDWR):
			self.configurationTip(
				_("You should enable write access to the directory /etc/asterisk. Without the ability to modify the configuration files DeStar would be pretty useless. You should 'chmod g+rwx' this directory and set it's group to one of '%s'.") % groups,
				"",
				[])

		if not backend.countConfiglets(clazz="CfgOptManager"):
			self.configurationTip(
				_("You should create a management API entry. Without this entry, DeStar can't control the Asterisk PBX software."),
				"add/CfgOptManager",
				[_("Configuration"), _("Options"), _("Management API access")] )

		if not backend.countConfiglets(clazz="CfgOptPBX"):
			self.configurationTip(
				_("You should create a PBX. Without a PBX, you can't create phones."),
				"pbx/",
				[_("Configuration"), _("PBX")] )

		if not backend.countConfiglets("Phones"):
			self.configurationTip(
				_("You should create a phone. Without defined phones you can't make and receive calls."),
				"phones/",
				[_("Configuration"), _("Phones")] )

		if not backend.countConfiglets("Trunks"):
			self.configurationTip(
				_("You should create a trunk (connection to a Phone company or VOIP Provider). Without a trunk you can only make calls between local phones."),
				"trunks/",
				[_("Configuration"), _("Trunks")] )

		if not os.access("/etc/zaptel.conf", os.O_RDWR):
			self.configurationTip(
				_("You should enable write access to /etc/zaptel.conf. Without write access to this file you cannot configure Zaptel devices, e.g. FXO/FXS cards, T1/E1 cards, ZapHFC ISDN cards, etc. You should 'chmod g+rw' this file and set it's group to one of '%s'.") % groups,
				"",
				[])
		if not os.access(panelutils.PANEL_CONF_DIR, os.O_RDWR):
			self.configurationTip(
				_("You should enable write access to the %s directory. Without the ability to modify the Asternic Flash Operator Panel configuration files DeStar won't be integrated whit the panel.") % panelutils.PANEL_CONF_DIR,
				"",
				[])
		db_fn = "/var/log/asterisk/master.db"
		if not os.access(db_fn, os.O_RDWR):
			self.configurationTip(
				_("You don't seem to have access to %s yet created by cdr_sqlite3_custom. Without this file CDR reports wont be accesible trough this interface.") % db_fn,
				"",
				[])

		if self.tipped:
			'</ul>'

	def showConfigurables [plain] (self, head):
		'<p>'
		head
		':</p><table id="subcategories"><thead>'
		'<tr>'
		for s in (_('Configured'), _('Category')):
			'<th>%s</th>' % s
		'</thead></tr>'

		for group in backend.configletsGrouped():
			'<tr>'
			'<td>%s</td>' % backend.countConfiglets(group)
			'<td><a href="%s">%s</a></td>' % (group.lower(), _(group))
			'</tr>'
		'</table>'


	def _q_index [plain] (self):
		header(self._q_desc)
		self.configurationTips()
		if self.tipped:
			self.showConfigurables(htmltext(_('Other things you can configure:')))
		else:
			self.showConfigurables(htmltext(_('You can configure the following things')))
		footer()
