# -*- coding: iso-8859-1 -*-
#
# Copyright (C) 2005 Holger Schurig
# Copyright (C) 2005 Manuel Alejandro Cer√≥n Estrada <ceronman@gmail.com>
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

# ToDo:
# - improve the appearance and usability
# - show the "navigation" buttons only when they are needed
# - use the current date in the "To:" option
# - glosary of the CDR terms, see README.cdr of asterisk

# - improve the code and change the name of some variable
# - ...


from Templates import *
from quixote.form import *
from quixote.directory import Directory, AccessControlled
from quixote import get_request, get_session
import queueutils
import time

def M_(message): return _(str(message))

def N_(message): return message

def getQueues():
	import configlets
	objs = configlets.configlet_tree.getConfigletsByName('CfgPhoneQueue')
	queues=[]
	queues.append(N_("All"))
	for obj in objs:
		queues.append(obj.name)		
	return queues


def formScript [html] ():
	'<script language="JavaScript" type="text/javascript"> \n'
	'<!-- \n'
	'function gotopage ( page ) \n'
	'{ \n'
	'  document.searchform.pagenumber.value = page; \n'
	'  document.searchform.submit() ; \n'
	'} \n'
	'function orderby ( column, order ) \n'
	'{ \n'
	'  document.searchform.orderby.value = column; \n'
	'  document.searchform.order.value = order; \n'
	'  document.searchform.submit() ; \n'
	'} \n'
	'--> \n'
	'</script> \n'

def pageIndex [html] (pagenum, total, limit):
	"<p>"
	if limit == 0:
		limit=1

	lastpage = total/limit

	if pagenum > 1:
		"<a href='javascript:gotopage(\"_newest\")'>%s</a> &nbsp; \n" % M_("First")
		"<a href='javascript:gotopage(\"_newer\")'>%s</a> &nbsp; \n" % M_("Previous")
	
	pagelist = [i for i in range(pagenum-10, pagenum+10) if i >= 0 and  i < lastpage]

	for i in pagelist:
		if pagenum != (i+1):
			"<a href='javascript:gotopage(\"%d\")'>%d</a> &nbsp; \n" % (i+1, i+1)
		else:
			"%d &nbsp; \n" % (i+1)

	if pagenum < lastpage:
		"<a href='javascript:gotopage(\"_older\")'>%s</a> &nbsp; \n" % M_("Next")
		"<a href='javascript:gotopage(\"_oldest\")'>%s</a> \n" % M_("Last")
	"</p>\n <br />"

def     generateYearsNumbers():
        years = range(2004,time.localtime()[0]+1)
        return years

def	generateMonthsNumbers():
	months = range(1,13)
	for i in range(0,9) :
		months[i] = "0%s" % months[i]
	return months

def	generateDaysNumbers():
	days = range(1,32)
	for i in range(0,9) :
		days[i] = "0%s" % days[i]
	return days
	
def 	generateOptionSelect(text=False):
	option = range (0,110,10)
	if text:
		option[0]=_("All")
	return option

	
operands=['=','<>','<=','<','>=','>']
	
def cdrForm [plain] (request, srcextension="", dstextension="", mincost="", duration="", clid="", pbx=""):

	monthsnumbers = [ '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12' ]
	monthsnames = [ _('January'), _('February'), _('March'), _('April'), _('May'), _('June'), _('July'), _('August'), _('September'), _('October'), _('November'), _('December') ]

	localtime = time.localtime()
	
	localyear = localtime[0]
	
	# fix the month value for those smaller than 10 (january ... september) 1 -> 01, 2 ->02 
	if localtime[1] < 10:
		localmonth = '0%s' % localtime[1] 
	else:
		localmonth = localtime[1]
	
	#the same for the day
	if localtime[2] < 10:
		localday = '0%s' % localtime[2]
	else:
		localday = localtime[2]

	form = Form(name = "searchform")
	form.add(StringWidget, "agent",  
					title=htmltext(_("Agent")),
					hint=htmltext(_("Wildcards: % is the 'zero or more characters' wildcard, and _ is the 'exactly one character' wildcard")),
					render_br=True )

	form.add(OptionSelectWidget,'linesToShow', title=_('Number of records to show:'),options=zip( generateOptionSelect(), generateOptionSelect(text=True), generateOptionSelect() ), value=20)	
	form.add_checkbox('searchBetweenDates',title= _("Search between the following dates"), render_br=True)
	form.add_single_select('fromyear', title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start:')), value="", options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False )
	form.add_single_select('frommonth', options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False )
	form.add_single_select('fromday', options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers() ), render_br=True )
	form.add_single_select('toyear', value=localyear, title=htmltext(_('&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End:')), options=zip( generateYearsNumbers(), generateYearsNumbers() ), render_br=False)
	form.add_single_select('tomonth', value=localmonth, options=zip( generateMonthsNumbers(), monthsnames, generateMonthsNumbers() ), render_br=False)
	form.add_single_select('today', value=localday, options=zip( generateDaysNumbers() , range(1,32), generateDaysNumbers()  ), render_br=True)
		
	form.add(HiddenWidget, 'pagenumber', value='_newest')
	form.add(HiddenWidget, 'order', value='DESC')
	form.add(HiddenWidget, 'orderby', value='time')

	form.add(SubmitWidget, '_submit', _("Search"), render_br=True)

	where = []
	where.append("agent != 'Agent/'")
	where.append("(event like 'AGENTCALLBACKLOG%' or event like 'AGENTLOG%' or event like 'PAUSEALL' or event like 'UNPAUSEALL' or event like 'RINGNOANSWER')")
	
	def render [html] ():

		name = form['pagenumber']
		
		global pagenum

		if not name in ['_newest','_newer', '_older', '_oldest']:
			pagenum = int(name)

		cursor = queueutils.count(where = where)
		total = cursor

		global q
		global p

		p = form["linesToShow"]

		if p == 0:
			p = total
		
		if (name == True or name == '1' or name == '_newest'):
			pagenum = 1
			q = 0
	
		elif name == '_newer': 
			pagenum -= 1
			q = q-form["linesToShow"]
			if q < 0:
				q=0
							
					
		elif name == '_older': 
			pagenum += 1
			q += p
			if q >= total:
				q = total - total % p
		
		elif name == '_oldest':
			q = total - total % p
			pagenum = total / p

		elif name in [str(x+1) for x in range(total/p)]:
			q = int(name) * p
			
			if q >= total:
				q = total - total % p
			
		elif p == total:
			q = 0
		else : 
			p = 20
			q = 0
				
		form.render()
		pageIndex(pagenum, total, p)
		cdrShowResults(where, p, q, total,form["orderby"],form["order"])

	if not form.is_submitted() or form.has_errors():
		return render()
	
	all = N_("All")
	
	if form["agent"]:
		where.append("agent like '%%%s%%'" % form["agent"])
				
	if form["searchBetweenDates"]:
	
		fromdate = "%s-%s-%s" % (form["fromyear"], form["frommonth"], form["fromday"])
		todate = "%s-%s-%s" % (form["toyear"], form["tomonth"], form["today"])
		where.append("date(FROM_UNIXTIME(time)) between date('%s') and date('%s')" % (fromdate, todate))
	
	return render()

def	cdrShowResults [html] (where=[], limit, offset, total = 0, field="start", order="DESC"):
	if total == 0:
		'<p>'
		'--No records to Show--'
		'</p>'
	else:
		orderby = '%s %s' % (N_(field), order)	
		cursor = queueutils.select(order=[str(orderby)], where = where, limit = limit, offset = offset)
	
		totalmin = 0
		totalhours = 0
		totalseg = 0
		
		row = cursor.fetchone()
		if row and int(offset) >= 0 and int(offset) <= total and cursor.description:
		
			'<table border="1"><thead><tr>'
                	for s in cursor.description:
				'<th>'
				if s[0] == field:
					neworder = (order=='ASC' and 'DESC') or 'ASC'
					"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], neworder, M_(s[0]))
					if order=='ASC':
						" <img src='/static/down.gif' border='0' alt='%s' />\n" % M_('Asc. Order')
					else:
						" <img src='/static/up.gif' border='0' alt='%s' />\n" % M_('Desc. Order')
				else:
					"<a href='javascript:orderby(\"%s\",\"%s\")'>%s</a>" % (s[0], order, M_(s[0]))
				'</th>'
                	'</tr></thead><tbody>'
		
			if cursor.description:
				fieldIndices = range(len(cursor.description))
			else:
				fieldIndices = []
                	while row:
	                	'<tr>'
				for fieldIndex in fieldIndices:
					'<td><center>'
					if row[fieldIndex] == "1969-12-31 19:00:00":
						'-'
					elif cursor.description[fieldIndex][0] == "callid":
						'<a href="/stats/detail/%s">%s</a>' % (row[fieldIndex],row[fieldIndex])
					elif cursor.description[fieldIndex][0] == "info2":
						if row[fieldIndex]:
							s = int(row[fieldIndex])
							min = (s % 60) and ((s / 60) + 1) or (s / 60)
							totalmin += min
							totalseg += s
							hour = (min % 60) and ((min / 60) + 1) or (min / 60)
							totalhours += hour
						row[fieldIndex]
					else: 
						row[fieldIndex]
        	                       	'</center></td>'
				'</tr>'
				row = cursor.fetchone()
                	'</tbody></table><br/>'
			'<p>'

			f = offset + limit
			if total >= f:			
				M_('Showing records from %s to %s of %s' % (offset+1, f, total))
			else:
				M_('Showing records from %s to %s of %s') % (offset+1, total, total)
			'<br /><br />'

		M_('Total Login Duration of shown agents: aprox. %s hours (aprox. %s min.) (%s seg.)') % (totalhours, totalmin, totalseg)
		'</p>'


class Page(AccessControlled, Directory): 

	_q_parent = 'page_stats'
	_q_title  = _("Agent Details")
	_q_desc   = _("Get reports about Agent sesions")
	_q_level  = 2
	_q_menupos = 20

	_q_exports = ['']

	def _q_access(self):
		self.session = get_session()
		self.request = get_request()
		if self.session.level < self._q_level:
			cantAccessPage()

	def _q_test(self):
		return queueutils.db

	def _q_index [plain] (self):
		header(self._q_desc, scripts=[formScript])
		cdrForm(self.request)
		footer()
